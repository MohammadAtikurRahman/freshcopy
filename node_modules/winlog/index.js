const winston = require("winston")
const path = require("path");

require("dotenv").config()


var getLabel = function (callingModule) {
  var parts = callingModule.filename.split(path.sep);
  return parts[parts.length - 2] + '/' + parts.pop();
};


const custom_format = winston.format.printf((info) => {
  const { message, label, timestamp, ms, stack = "", service, ...meta} = info;
  const rest = meta[Symbol.for("splat")] || [];
  
  const level = meta[Symbol.for("level")];
  const stringifiedRest = [message, ...rest]
    .map((el) => (el instanceof Error ? el.stack : el))
    .join(" ");

  return `[${service}] [${label}] [${level}]:  ${stringifiedRest} (${ms}) ${stack}`;
});

const { combine, timestamp, ms, colorize, errors, label} = winston.format;

const logger = function (callingModule) {
      return winston.createLogger({
      level: process.env.LOG_LEVEL,
      silent: process.env.NODE_ENV === "test",
      format: combine(
        errors({ stack: true }),
        colorize(),
        label({label:getLabel(callingModule)}),
        timestamp({
          format: "MMM-DD-YYYY HH:mm:ss",
        }),
        ms(),
        custom_format
      ),
      defaultMeta: { service: process.env.SERVICE },
      transports: [new winston.transports.Console({
        label: getLabel(callingModule),
        json: false,
        timestamp: true,
        depth:true,
        colorize:true
    })],
    });
}

module.exports = logger;
